name: Nixpkgs Update Reminder

on:
  release:
    types: [published]

jobs:
  create-reminder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Get release info
        id: release
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Create nixpkgs update issue
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.release.outputs.version }}';
            const tag = '${{ steps.release.outputs.tag }}';
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Update mcp-trace to ${version} in nixpkgs`,
              body: `A new release (${tag}) is available: https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${tag}

## Steps to update nixpkgs:

1. Fork and clone nixpkgs:
   \`\`\`bash
   git clone https://github.com/YOUR-USERNAME/nixpkgs.git
   cd nixpkgs
   git checkout -b mcp-trace-${version}
   \`\`\`

2. Update the package at \`pkgs/by-name/mc/mcp-trace/package.nix\`:
   - Update \`version = "${version}";\`
   - Update the \`hash\` in \`src\` (use \`nix-prefetch-github zabirauf mcp-trace --rev v${version}\`)
   - Update \`cargoHash\` (build with empty string first to get the correct hash)

3. Test the build:
   \`\`\`bash
   nix-build -A mcp-trace
   ./result/bin/mcp-trace --help
   \`\`\`

4. Submit PR with title: \`mcp-trace: ${{ steps.release.outputs.version }} -> ${version}\`

## Template PR description:
\`\`\`
Semi-automatic update generated by https://github.com/ryantm/nixpkgs-update tools.

Built on platform(s): x86_64-linux, aarch64-darwin
Tested execution of: /nix/store/.../bin/mcp-trace --help
\`\`\`

cc @zabirauf`,
              labels: ['nixpkgs', 'release']
            });
            
            console.log(`Created issue #${issue.data.number}`);
      
      - name: Comment on release
        uses: actions/github-script@v7
        with:
          script: |
            const version = '${{ steps.release.outputs.version }}';
            await github.rest.repos.createReleaseComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: context.payload.release.id,
              body: `ðŸ“¦ Don't forget to update nixpkgs! Issue created for tracking.`
            });